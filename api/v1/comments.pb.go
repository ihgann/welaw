// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/v1/comments.proto

package grpc_welaw_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ListCommentsOptions_RequestType int32

const (
	ListCommentsOptions_BY_USERNAME ListCommentsOptions_RequestType = 0
	ListCommentsOptions_BY_VERSION  ListCommentsOptions_RequestType = 1
)

var ListCommentsOptions_RequestType_name = map[int32]string{
	0: "BY_USERNAME",
	1: "BY_VERSION",
}
var ListCommentsOptions_RequestType_value = map[string]int32{
	"BY_USERNAME": 0,
	"BY_VERSION":  1,
}

func (x ListCommentsOptions_RequestType) String() string {
	return proto.EnumName(ListCommentsOptions_RequestType_name, int32(x))
}
func (ListCommentsOptions_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{1, 0}
}

type ListAnnotationsOptions_RequestType int32

const (
	ListAnnotationsOptions_BY_USERNAME ListAnnotationsOptions_RequestType = 0
	ListAnnotationsOptions_BY_UID      ListAnnotationsOptions_RequestType = 1
	ListAnnotationsOptions_BY_COMMENT  ListAnnotationsOptions_RequestType = 2
)

var ListAnnotationsOptions_RequestType_name = map[int32]string{
	0: "BY_USERNAME",
	1: "BY_UID",
	2: "BY_COMMENT",
}
var ListAnnotationsOptions_RequestType_value = map[string]int32{
	"BY_USERNAME": 0,
	"BY_UID":      1,
	"BY_COMMENT":  2,
}

func (x ListAnnotationsOptions_RequestType) String() string {
	return proto.EnumName(ListAnnotationsOptions_RequestType_name, int32(x))
}
func (ListAnnotationsOptions_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{6, 0}
}

type GetCommentOptions_RequestType int32

const (
	GetCommentOptions_BY_USER_VERSION GetCommentOptions_RequestType = 0
	GetCommentOptions_BY_UID          GetCommentOptions_RequestType = 1
)

var GetCommentOptions_RequestType_name = map[int32]string{
	0: "BY_USER_VERSION",
	1: "BY_UID",
}
var GetCommentOptions_RequestType_value = map[string]int32{
	"BY_USER_VERSION": 0,
	"BY_UID":          1,
}

func (x GetCommentOptions_RequestType) String() string {
	return proto.EnumName(GetCommentOptions_RequestType_name, int32(x))
}
func (GetCommentOptions_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{7, 0}
}

type Comment struct {
	Comment         string        `protobuf:"bytes,1,opt,name=comment" json:"comment,omitempty"`
	Username        string        `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	UserId          string        `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	AnnotationCount int32         `protobuf:"varint,4,opt,name=annotation_count,json=annotationCount" json:"annotation_count,omitempty"`
	Annotations     []*Annotation `protobuf:"bytes,5,rep,name=annotations" json:"annotations,omitempty"`
	Upstream        string        `protobuf:"bytes,6,opt,name=upstream" json:"upstream,omitempty"`
	Ident           string        `protobuf:"bytes,7,opt,name=ident" json:"ident,omitempty"`
	Branch          string        `protobuf:"bytes,8,opt,name=branch" json:"branch,omitempty"`
	Version         uint32        `protobuf:"varint,9,opt,name=version" json:"version,omitempty"`
	Uid             string        `protobuf:"bytes,10,opt,name=uid" json:"uid,omitempty"`
	Disabled        bool          `protobuf:"varint,11,opt,name=disabled" json:"disabled,omitempty"`
	User            *User         `protobuf:"bytes,12,opt,name=user" json:"user,omitempty"`
	Likes           int32         `protobuf:"varint,13,opt,name=likes" json:"likes,omitempty"`
	Liked           bool          `protobuf:"varint,14,opt,name=liked" json:"liked,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Comment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Comment) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Comment) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Comment) GetAnnotationCount() int32 {
	if m != nil {
		return m.AnnotationCount
	}
	return 0
}

func (m *Comment) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Comment) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *Comment) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *Comment) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Comment) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Comment) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Comment) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *Comment) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Comment) GetLikes() int32 {
	if m != nil {
		return m.Likes
	}
	return 0
}

func (m *Comment) GetLiked() bool {
	if m != nil {
		return m.Liked
	}
	return false
}

type ListCommentsOptions struct {
	ReqType  ListCommentsOptions_RequestType `protobuf:"varint,1,opt,name=req_type,json=reqType,enum=grpc.welaw.v1.ListCommentsOptions_RequestType" json:"req_type,omitempty"`
	Upstream string                          `protobuf:"bytes,2,opt,name=upstream" json:"upstream,omitempty"`
	Ident    string                          `protobuf:"bytes,3,opt,name=ident" json:"ident,omitempty"`
	Branch   string                          `protobuf:"bytes,4,opt,name=branch" json:"branch,omitempty"`
	Version  int32                           `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	Filter   string                          `protobuf:"bytes,6,opt,name=filter" json:"filter,omitempty"`
	PageSize int32                           `protobuf:"varint,7,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageNum  int32                           `protobuf:"varint,8,opt,name=page_num,json=pageNum" json:"page_num,omitempty"`
	Desc     bool                            `protobuf:"varint,9,opt,name=desc" json:"desc,omitempty"`
	Username string                          `protobuf:"bytes,10,opt,name=username" json:"username,omitempty"`
	OrderBy  string                          `protobuf:"bytes,11,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
}

func (m *ListCommentsOptions) Reset()                    { *m = ListCommentsOptions{} }
func (m *ListCommentsOptions) String() string            { return proto.CompactTextString(m) }
func (*ListCommentsOptions) ProtoMessage()               {}
func (*ListCommentsOptions) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *ListCommentsOptions) GetReqType() ListCommentsOptions_RequestType {
	if m != nil {
		return m.ReqType
	}
	return ListCommentsOptions_BY_USERNAME
}

func (m *ListCommentsOptions) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *ListCommentsOptions) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *ListCommentsOptions) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *ListCommentsOptions) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ListCommentsOptions) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListCommentsOptions) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCommentsOptions) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *ListCommentsOptions) GetDesc() bool {
	if m != nil {
		return m.Desc
	}
	return false
}

func (m *ListCommentsOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ListCommentsOptions) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type DeleteCommentOptions struct {
}

func (m *DeleteCommentOptions) Reset()                    { *m = DeleteCommentOptions{} }
func (m *DeleteCommentOptions) String() string            { return proto.CompactTextString(m) }
func (*DeleteCommentOptions) ProtoMessage()               {}
func (*DeleteCommentOptions) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

type UpdateCommentOptions struct {
}

func (m *UpdateCommentOptions) Reset()                    { *m = UpdateCommentOptions{} }
func (m *UpdateCommentOptions) String() string            { return proto.CompactTextString(m) }
func (*UpdateCommentOptions) ProtoMessage()               {}
func (*UpdateCommentOptions) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

type Annotation struct {
	Quote     string             `protobuf:"bytes,1,opt,name=quote" json:"quote,omitempty"`
	Ranges    []*AnnotationRange `protobuf:"bytes,2,rep,name=ranges" json:"ranges,omitempty"`
	Text      string             `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	Upstream  string             `protobuf:"bytes,4,opt,name=upstream" json:"upstream,omitempty"`
	Ident     string             `protobuf:"bytes,5,opt,name=ident" json:"ident,omitempty"`
	Branch    string             `protobuf:"bytes,6,opt,name=branch" json:"branch,omitempty"`
	Version   string             `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	Id        string             `protobuf:"bytes,8,opt,name=id" json:"id,omitempty"`
	CommentId string             `protobuf:"bytes,9,opt,name=comment_id,json=commentId" json:"comment_id,omitempty"`
}

func (m *Annotation) Reset()                    { *m = Annotation{} }
func (m *Annotation) String() string            { return proto.CompactTextString(m) }
func (*Annotation) ProtoMessage()               {}
func (*Annotation) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *Annotation) GetQuote() string {
	if m != nil {
		return m.Quote
	}
	return ""
}

func (m *Annotation) GetRanges() []*AnnotationRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

func (m *Annotation) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Annotation) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *Annotation) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *Annotation) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Annotation) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Annotation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Annotation) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

type AnnotationRange struct {
	Start       string `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	StartOffset int32  `protobuf:"varint,2,opt,name=startOffset" json:"startOffset,omitempty"`
	End         string `protobuf:"bytes,3,opt,name=end" json:"end,omitempty"`
	EndOffset   int32  `protobuf:"varint,4,opt,name=endOffset" json:"endOffset,omitempty"`
}

func (m *AnnotationRange) Reset()                    { *m = AnnotationRange{} }
func (m *AnnotationRange) String() string            { return proto.CompactTextString(m) }
func (*AnnotationRange) ProtoMessage()               {}
func (*AnnotationRange) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *AnnotationRange) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *AnnotationRange) GetStartOffset() int32 {
	if m != nil {
		return m.StartOffset
	}
	return 0
}

func (m *AnnotationRange) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *AnnotationRange) GetEndOffset() int32 {
	if m != nil {
		return m.EndOffset
	}
	return 0
}

type ListAnnotationsOptions struct {
	ReqType   ListAnnotationsOptions_RequestType `protobuf:"varint,1,opt,name=req_type,json=reqType,enum=grpc.welaw.v1.ListAnnotationsOptions_RequestType" json:"req_type,omitempty"`
	Username  string                             `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Uid       string                             `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
	CommentId string                             `protobuf:"bytes,4,opt,name=comment_id,json=commentId" json:"comment_id,omitempty"`
}

func (m *ListAnnotationsOptions) Reset()                    { *m = ListAnnotationsOptions{} }
func (m *ListAnnotationsOptions) String() string            { return proto.CompactTextString(m) }
func (*ListAnnotationsOptions) ProtoMessage()               {}
func (*ListAnnotationsOptions) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *ListAnnotationsOptions) GetReqType() ListAnnotationsOptions_RequestType {
	if m != nil {
		return m.ReqType
	}
	return ListAnnotationsOptions_BY_USERNAME
}

func (m *ListAnnotationsOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ListAnnotationsOptions) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ListAnnotationsOptions) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

type GetCommentOptions struct {
	ReqType  GetCommentOptions_RequestType `protobuf:"varint,1,opt,name=req_type,json=reqType,enum=grpc.welaw.v1.GetCommentOptions_RequestType" json:"req_type,omitempty"`
	Uid      string                        `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	Upstream string                        `protobuf:"bytes,3,opt,name=upstream" json:"upstream,omitempty"`
	Ident    string                        `protobuf:"bytes,4,opt,name=ident" json:"ident,omitempty"`
	Branch   string                        `protobuf:"bytes,5,opt,name=branch" json:"branch,omitempty"`
	Version  int32                         `protobuf:"varint,6,opt,name=version" json:"version,omitempty"`
	Username string                        `protobuf:"bytes,7,opt,name=username" json:"username,omitempty"`
	Quiet    bool                          `protobuf:"varint,8,opt,name=quiet" json:"quiet,omitempty"`
}

func (m *GetCommentOptions) Reset()                    { *m = GetCommentOptions{} }
func (m *GetCommentOptions) String() string            { return proto.CompactTextString(m) }
func (*GetCommentOptions) ProtoMessage()               {}
func (*GetCommentOptions) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *GetCommentOptions) GetReqType() GetCommentOptions_RequestType {
	if m != nil {
		return m.ReqType
	}
	return GetCommentOptions_BY_USER_VERSION
}

func (m *GetCommentOptions) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *GetCommentOptions) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *GetCommentOptions) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *GetCommentOptions) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *GetCommentOptions) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetCommentOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetCommentOptions) GetQuiet() bool {
	if m != nil {
		return m.Quiet
	}
	return false
}

type LikeCommentOptions struct {
	CommentId string `protobuf:"bytes,1,opt,name=comment_id,json=commentId" json:"comment_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (m *LikeCommentOptions) Reset()                    { *m = LikeCommentOptions{} }
func (m *LikeCommentOptions) String() string            { return proto.CompactTextString(m) }
func (*LikeCommentOptions) ProtoMessage()               {}
func (*LikeCommentOptions) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *LikeCommentOptions) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *LikeCommentOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func init() {
	proto.RegisterType((*Comment)(nil), "grpc.welaw.v1.Comment")
	proto.RegisterType((*ListCommentsOptions)(nil), "grpc.welaw.v1.ListCommentsOptions")
	proto.RegisterType((*DeleteCommentOptions)(nil), "grpc.welaw.v1.DeleteCommentOptions")
	proto.RegisterType((*UpdateCommentOptions)(nil), "grpc.welaw.v1.UpdateCommentOptions")
	proto.RegisterType((*Annotation)(nil), "grpc.welaw.v1.Annotation")
	proto.RegisterType((*AnnotationRange)(nil), "grpc.welaw.v1.AnnotationRange")
	proto.RegisterType((*ListAnnotationsOptions)(nil), "grpc.welaw.v1.ListAnnotationsOptions")
	proto.RegisterType((*GetCommentOptions)(nil), "grpc.welaw.v1.GetCommentOptions")
	proto.RegisterType((*LikeCommentOptions)(nil), "grpc.welaw.v1.LikeCommentOptions")
	proto.RegisterEnum("grpc.welaw.v1.ListCommentsOptions_RequestType", ListCommentsOptions_RequestType_name, ListCommentsOptions_RequestType_value)
	proto.RegisterEnum("grpc.welaw.v1.ListAnnotationsOptions_RequestType", ListAnnotationsOptions_RequestType_name, ListAnnotationsOptions_RequestType_value)
	proto.RegisterEnum("grpc.welaw.v1.GetCommentOptions_RequestType", GetCommentOptions_RequestType_name, GetCommentOptions_RequestType_value)
}

func init() { proto.RegisterFile("api/v1/comments.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 798 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x2e, 0x49, 0xf1, 0x47, 0xa3, 0xda, 0x56, 0xd6, 0xa9, 0x4b, 0xa7, 0x3f, 0x10, 0x78, 0xa9,
	0x0a, 0x14, 0x0c, 0xec, 0x02, 0x3d, 0xb4, 0xa7, 0xd8, 0x31, 0x02, 0x01, 0xb6, 0x05, 0xac, 0xe3,
	0x02, 0x39, 0x11, 0x94, 0x38, 0x76, 0x17, 0x91, 0x48, 0x8a, 0xbb, 0x72, 0x2a, 0xdf, 0xfa, 0x04,
	0x7d, 0x8c, 0xbe, 0x40, 0xdf, 0xab, 0xaf, 0x50, 0xec, 0x72, 0x45, 0x89, 0x94, 0xd8, 0xde, 0xe6,
	0x1b, 0xce, 0x6a, 0x77, 0xbe, 0x6f, 0xbe, 0x11, 0x7c, 0x11, 0xe7, 0xec, 0xf5, 0xd3, 0xd9, 0xeb,
	0x69, 0x36, 0x9f, 0x63, 0x2a, 0x78, 0x98, 0x17, 0x99, 0xc8, 0xc8, 0xc1, 0x63, 0x91, 0x4f, 0xc3,
	0x4f, 0x38, 0x8b, 0x3f, 0x85, 0x4f, 0x67, 0xaf, 0x5e, 0xe8, 0xaa, 0x25, 0xc7, 0xa2, 0xac, 0x08,
	0xfe, 0xb2, 0xc0, 0xbd, 0x2c, 0x0f, 0x11, 0x1f, 0x5c, 0x7d, 0xde, 0x37, 0x06, 0xc6, 0xb0, 0x4b,
	0xd7, 0x90, 0xbc, 0x02, 0x4f, 0x9e, 0x49, 0xe3, 0x39, 0xfa, 0xa6, 0xfa, 0x54, 0x61, 0xf2, 0x25,
	0xb8, 0x32, 0x8e, 0x58, 0xe2, 0x5b, 0xea, 0x93, 0x23, 0xe1, 0x28, 0x21, 0xdf, 0x43, 0x3f, 0x4e,
	0xd3, 0x4c, 0xc4, 0x82, 0x65, 0x69, 0x34, 0xcd, 0x96, 0xa9, 0xf0, 0x3b, 0x03, 0x63, 0x68, 0xd3,
	0xa3, 0x4d, 0xfe, 0x52, 0xa6, 0xc9, 0x2f, 0xd0, 0xdb, 0xa4, 0xb8, 0x6f, 0x0f, 0xac, 0x61, 0xef,
	0xfc, 0x34, 0xac, 0xbd, 0x3e, 0x7c, 0x53, 0x55, 0xd0, 0xed, 0x6a, 0xf5, 0xb8, 0x9c, 0x8b, 0x02,
	0xe3, 0xb9, 0xef, 0xe8, 0xc7, 0x69, 0x4c, 0x5e, 0x82, 0xcd, 0x12, 0xd9, 0x90, 0xab, 0x3e, 0x94,
	0x80, 0x9c, 0x80, 0x33, 0x29, 0xe2, 0x74, 0xfa, 0x9b, 0xef, 0x95, 0x2f, 0x2e, 0x91, 0x24, 0xe0,
	0x09, 0x0b, 0xce, 0xb2, 0xd4, 0xef, 0x0e, 0x8c, 0xe1, 0x01, 0x5d, 0x43, 0xd2, 0x07, 0x6b, 0xc9,
	0x12, 0x1f, 0x54, 0xb9, 0x0c, 0xe5, 0xad, 0x09, 0xe3, 0xf1, 0x64, 0x86, 0x89, 0xdf, 0x1b, 0x18,
	0x43, 0x8f, 0x56, 0x98, 0x7c, 0x07, 0x1d, 0xc9, 0x81, 0xff, 0xf9, 0xc0, 0x18, 0xf6, 0xce, 0x8f,
	0x1b, 0x7d, 0xdc, 0x73, 0x2c, 0xa8, 0x2a, 0x90, 0xcf, 0x9b, 0xb1, 0x8f, 0xc8, 0xfd, 0x03, 0xc5,
	0x4b, 0x09, 0xd6, 0xd9, 0xc4, 0x3f, 0x54, 0xbf, 0x5b, 0x82, 0xe0, 0x4f, 0x0b, 0x8e, 0xaf, 0x19,
	0x17, 0x5a, 0x2d, 0x3e, 0xce, 0xcb, 0xf6, 0x47, 0xe0, 0x15, 0xb8, 0x88, 0xc4, 0x2a, 0x47, 0x25,
	0xdb, 0xe1, 0x79, 0xd8, 0xb8, 0x70, 0xcf, 0xa9, 0x90, 0xe2, 0x62, 0x89, 0x5c, 0xbc, 0x5f, 0xe5,
	0x48, 0xdd, 0x02, 0x17, 0x32, 0xa8, 0x31, 0x69, 0xb6, 0x31, 0x69, 0xed, 0x67, 0xb2, 0xd3, 0xc6,
	0xa4, 0xad, 0x5a, 0xab, 0x98, 0x3c, 0x01, 0xe7, 0x81, 0xcd, 0x04, 0x16, 0x5a, 0x2b, 0x8d, 0xc8,
	0x57, 0xd0, 0xcd, 0xe3, 0x47, 0x8c, 0x38, 0x7b, 0x46, 0xa5, 0x96, 0x4d, 0x3d, 0x99, 0xb8, 0x63,
	0xcf, 0x48, 0x4e, 0x41, 0xc5, 0x51, 0xba, 0x9c, 0x2b, 0xc9, 0x6c, 0xea, 0x4a, 0x7c, 0xbb, 0x9c,
	0x13, 0x02, 0x9d, 0x04, 0xf9, 0x54, 0x09, 0xe6, 0x51, 0x15, 0xd7, 0xc6, 0x15, 0x1a, 0xe3, 0x7a,
	0x0a, 0x5e, 0x56, 0x24, 0x58, 0x44, 0x93, 0x95, 0xd2, 0xad, 0x4b, 0x5d, 0x85, 0x2f, 0x56, 0x41,
	0x08, 0xbd, 0x2d, 0x5a, 0xc8, 0x11, 0xf4, 0x2e, 0x3e, 0x44, 0xf7, 0x77, 0x57, 0xf4, 0xf6, 0xcd,
	0xcd, 0x55, 0xff, 0x33, 0x72, 0x08, 0x70, 0xf1, 0x21, 0xfa, 0xf5, 0x8a, 0xde, 0x8d, 0xc6, 0xb7,
	0x7d, 0x23, 0x38, 0x81, 0x97, 0x6f, 0x71, 0x86, 0x02, 0x35, 0xb9, 0x9a, 0x5b, 0x99, 0xbf, 0xcf,
	0x93, 0x78, 0x27, 0xff, 0x87, 0x09, 0xb0, 0x19, 0x62, 0xc9, 0xe8, 0x62, 0x99, 0x09, 0xd4, 0x66,
	0x2b, 0x01, 0xf9, 0x09, 0x9c, 0x22, 0x4e, 0x1f, 0x91, 0xfb, 0xa6, 0x72, 0xc1, 0xb7, 0xed, 0x2e,
	0x90, 0x65, 0x54, 0x57, 0x4b, 0x1e, 0x04, 0xfe, 0xbe, 0x96, 0x47, 0xc5, 0x35, 0x3d, 0x3b, 0x6d,
	0x7a, 0xda, 0xfb, 0xf5, 0x74, 0xda, 0xf4, 0x2c, 0x9d, 0x54, 0xe9, 0x79, 0x08, 0x26, 0x4b, 0xb4,
	0x8f, 0x4c, 0x96, 0x90, 0x6f, 0x00, 0xf4, 0xd6, 0x90, 0x1b, 0xa1, 0xab, 0xf2, 0x5d, 0x9d, 0x19,
	0x25, 0xc1, 0x0a, 0x8e, 0x1a, 0x1d, 0xc8, 0x97, 0x70, 0x11, 0x17, 0xeb, 0xa5, 0x53, 0x02, 0x32,
	0x80, 0x9e, 0x0a, 0xc6, 0x0f, 0x0f, 0x1c, 0x85, 0x1a, 0x47, 0x9b, 0x6e, 0xa7, 0xa4, 0x27, 0x31,
	0x5d, 0x2f, 0x1d, 0x19, 0x92, 0xaf, 0xa1, 0x8b, 0x69, 0xa2, 0x4f, 0x94, 0xab, 0x66, 0x93, 0x08,
	0xfe, 0x31, 0xe0, 0x44, 0x5a, 0x61, 0x73, 0x7f, 0xe5, 0xa1, 0xeb, 0x1d, 0x0f, 0x9d, 0xed, 0xf1,
	0xd0, 0xee, 0xc1, 0x76, 0x1b, 0xb5, 0x6d, 0x4b, 0xbd, 0x48, 0xac, 0xcd, 0x22, 0xa9, 0x13, 0xd6,
	0x69, 0x12, 0xf6, 0xf3, 0xff, 0x0c, 0x25, 0x80, 0x23, 0x13, 0xa3, 0xb7, 0x7d, 0x43, 0x0f, 0xe8,
	0xe5, 0xf8, 0xe6, 0xe6, 0xea, 0xf6, 0x7d, 0xdf, 0x0c, 0xfe, 0x36, 0xe1, 0xc5, 0x3b, 0x14, 0xf5,
	0x31, 0x24, 0xef, 0x76, 0x9a, 0xfd, 0xa1, 0xd1, 0xec, 0xce, 0x99, 0xfd, 0x7d, 0xea, 0x5e, 0xcc,
	0xda, 0x52, 0xac, 0x06, 0xce, 0x6a, 0x1b, 0xb8, 0xce, 0xfe, 0x81, 0xb3, 0xdb, 0x06, 0xce, 0xa9,
	0x2f, 0x90, 0x6d, 0x76, 0xdd, 0x06, 0xbb, 0xca, 0x52, 0x0c, 0x85, 0x9a, 0x47, 0x8f, 0x96, 0xa0,
	0xe9, 0xeb, 0x63, 0x38, 0xd2, 0x14, 0x56, 0x5e, 0xae, 0xd1, 0x18, 0x8c, 0x81, 0x5c, 0xb3, 0x8f,
	0x0d, 0xf7, 0x36, 0x74, 0x32, 0x1a, 0x3a, 0xfd, 0x97, 0xe8, 0x13, 0x47, 0xfd, 0xd7, 0xfe, 0xf8,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x2b, 0x6e, 0xe6, 0xa6, 0x07, 0x00, 0x00,
}
